#!/bin/sh -e
export localstatedir="/var"

export prefix="/usr"

export CPP="arm-oe-linux-uclibcgnueabi-gcc -E"

export mandir="/usr/share/man"

export STRIP="arm-oe-linux-uclibcgnueabi-strip"

export STAGING_SIPDIR="/home/dhuggins/Projects/TeRK/terkos/oe/tmp/staging/i686-linux/usr/share/sip"

export BUILD_CXXFLAGS="-isystem/home/dhuggins/Projects/TeRK/terkos/oe/tmp/staging/i686-linux/usr/include -Os -fpermissive"

export OBJCOPY="arm-oe-linux-uclibcgnueabi-objcopy"

export AR="arm-oe-linux-uclibcgnueabi-ar"

export SDK_CPPFLAGS="-isystem/home/dhuggins/Projects/TeRK/terkos/oe/tmp/staging/i686-mingw32/usr/include -isystem/home/dhuggins/Projects/TeRK/terkos/oe/tmp/staging/armv4t-oe-linux-uclibcgnueabi/usr/include"

export AS="arm-oe-linux-uclibcgnueabi-as"

export PSTAGING_ACTIVE="0"

export libexecdir="/usr/libexec"

export RANLIB="arm-oe-linux-uclibcgnueabi-ranlib"

export QTDIR="/home/dhuggins/Projects/TeRK/terkos/oe/tmp/staging/armv4t-oe-linux-uclibcgnueabi/qt2"

export BUILD_CXX="ccache g++"

export datadir="/usr/share"

export SDK_LDFLAGS="-L/home/dhuggins/Projects/TeRK/terkos/oe/tmp/staging/i686-mingw32/usr/lib -Wl,-rpath-link,/home/dhuggins/Projects/TeRK/terkos/oe/tmp/staging/i686-mingw32/usr/lib -Wl,-O1"

export LD="arm-oe-linux-uclibcgnueabi-ld"

export EXTRA_OEMAKE="-e MAKEFLAGS="

export LDFLAGS="-L/home/dhuggins/Projects/TeRK/terkos/oe/tmp/staging/armv4t-oe-linux-uclibcgnueabi/usr/lib -Wl,-rpath-link,/home/dhuggins/Projects/TeRK/terkos/oe/tmp/staging/armv4t-oe-linux-uclibcgnueabi/usr/lib -Wl,-O1 -Wl,--hash-style=gnu"

export TARGET_CXXFLAGS="-isystem/home/dhuggins/Projects/TeRK/terkos/oe/tmp/staging/armv4t-oe-linux-uclibcgnueabi/usr/include -fexpensive-optimizations -fomit-frame-pointer -frename-registers -Os -fpermissive"

export MAKE="make"

export includedir="/usr/include"

export TARGET_CPPFLAGS="-isystem/home/dhuggins/Projects/TeRK/terkos/oe/tmp/staging/armv4t-oe-linux-uclibcgnueabi/usr/include"

export OPIEDIR="/home/dhuggins/Projects/TeRK/terkos/oe/tmp/staging/armv4t-oe-linux-uclibcgnueabi"

export BUILD_CC="ccache gcc"

export BUILD_LDFLAGS="-L/home/dhuggins/Projects/TeRK/terkos/oe/tmp/staging/i686-linux/usr/lib -Wl,-rpath-link,/home/dhuggins/Projects/TeRK/terkos/oe/tmp/staging/i686-linux/usr/lib -Wl,-rpath,/home/dhuggins/Projects/TeRK/terkos/oe/tmp/staging/i686-linux/usr/lib -Wl,-O1"

export CONFIG_SITE="/home/dhuggins/Projects/TeRK/terkos/oe/openembedded/site/endian-little /home/dhuggins/Projects/TeRK/terkos/oe/openembedded/site/common-linux /home/dhuggins/Projects/TeRK/terkos/oe/openembedded/site/common-uclibc /home/dhuggins/Projects/TeRK/terkos/oe/openembedded/site/arm-common /home/dhuggins/Projects/TeRK/terkos/oe/openembedded/site/arm-linux-uclibc /home/dhuggins/Projects/TeRK/terkos/oe/openembedded/site/common /home/dhuggins/Projects/TeRK/terkos/oe/openembedded/site/common"

unset TARGET_ARCH

export bindir="/usr/bin"

export OBJDUMP="arm-oe-linux-uclibcgnueabi-objdump"

export BUILD_LD="ld"

export exec_prefix="/usr"

export oldincludedir="/usr/include"

export CCLD="ccache arm-oe-linux-uclibcgnueabi-gcc -march=armv4t -mtune=arm920t -mthumb-interwork -mno-thumb"

export SHELLCMDS="bash --rcfile $TERMRCFILE"

export QPEDIR="/home/dhuggins/Projects/TeRK/terkos/oe/tmp/staging/armv4t-oe-linux-uclibcgnueabi"

export BUILD_CCLD="gcc"

export base_libdir="/lib"

export PATH="/home/dhuggins/Projects/TeRK/terkos/oe/tmp/staging/i686-linux/usr/bin/qwerk-oe-linux-uclibcgnueabi:/home/dhuggins/Projects/TeRK/terkos/oe/tmp/staging/i686-linux/usr/bin/armv4t-oe-linux-uclibcgnueabi:/home/dhuggins/Projects/TeRK/terkos/oe/tmp/staging/i686-linux/usr/sbin:/home/dhuggins/Projects/TeRK/terkos/oe/tmp/staging/i686-linux/usr/bin:/home/dhuggins/Projects/TeRK/terkos/oe/tmp/cross/armv4t/bin:/home/dhuggins/Projects/TeRK/terkos/oe/tmp/staging/i686-linux/sbin:/home/dhuggins/Projects/TeRK/terkos/oe/tmp/staging/i686-linux/bin:/home/dhuggins/Projects/TeRK/terkos/oe/openembedded/bitbake/bin:/usr/local/bin:/usr/bin:/bin:/usr/bin/X11:/usr/games"

export TARGET_CFLAGS="-isystem/home/dhuggins/Projects/TeRK/terkos/oe/tmp/staging/armv4t-oe-linux-uclibcgnueabi/usr/include -fexpensive-optimizations -fomit-frame-pointer -frename-registers -Os"

export base_bindir="/bin"

export servicedir="/srv"

export BUILD_CPP="cpp"

export SDK_CXXFLAGS="-isystem/home/dhuggins/Projects/TeRK/terkos/oe/tmp/staging/i686-mingw32/usr/include -isystem/home/dhuggins/Projects/TeRK/terkos/oe/tmp/staging/armv4t-oe-linux-uclibcgnueabi/usr/include -fexpensive-optimizations -fomit-frame-pointer -frename-registers -Os -fpermissive"

export sbindir="/usr/sbin"

export SDK_CFLAGS="-isystem/home/dhuggins/Projects/TeRK/terkos/oe/tmp/staging/i686-mingw32/usr/include -isystem/home/dhuggins/Projects/TeRK/terkos/oe/tmp/staging/armv4t-oe-linux-uclibcgnueabi/usr/include -fexpensive-optimizations -fomit-frame-pointer -frename-registers -Os"

export BUILD_AR="ar"

export sharedstatedir="/usr/com"

export F77="ccache arm-oe-linux-uclibcgnueabi-g77 -march=armv4t -mtune=arm920t -mthumb-interwork -mno-thumb"

export XDG_DATA_DIRS="/home/dhuggins/Projects/TeRK/terkos/oe/tmp/staging/armv4t-oe-linux-uclibcgnueabi/usr/share"

export IMAGE_BASENAME="vexpro-image"

export BUILD_CFLAGS="-isystem/home/dhuggins/Projects/TeRK/terkos/oe/tmp/staging/i686-linux/usr/include -Os"

unset DISTRO

export STAGING_IDLDIR="/home/dhuggins/Projects/TeRK/terkos/oe/tmp/staging/armv4t-oe-linux-uclibcgnueabi/usr/share/idl"

export QMAKE_MKSPEC_PATH="/home/dhuggins/Projects/TeRK/terkos/oe/tmp/staging/i686-linux/usr/share/qmake"

export PKG_CONFIG_DIR="/home/dhuggins/Projects/TeRK/terkos/oe/tmp/staging/armv4t-oe-linux-uclibcgnueabi/usr/lib/pkgconfig"

export PKG_CONFIG_DISABLE_UNINSTALLED="yes"

export infodir="/usr/share/info"

export libdir="/usr/lib"

export CC="ccache arm-oe-linux-uclibcgnueabi-gcc -march=armv4t -mtune=arm920t -mthumb-interwork -mno-thumb"

export TARGET_LDFLAGS="-L/home/dhuggins/Projects/TeRK/terkos/oe/tmp/staging/armv4t-oe-linux-uclibcgnueabi/usr/lib -Wl,-rpath-link,/home/dhuggins/Projects/TeRK/terkos/oe/tmp/staging/armv4t-oe-linux-uclibcgnueabi/usr/lib -Wl,-O1 -Wl,--hash-style=gnu"

export BUILD_F77="ccache g77"

export CPPFLAGS="-isystem/home/dhuggins/Projects/TeRK/terkos/oe/tmp/staging/armv4t-oe-linux-uclibcgnueabi/usr/include"

export docdir="/usr/share/doc"

export palmqtdir="/usr/lib/opie"

export base_sbindir="/sbin"

export CXX="ccache arm-oe-linux-uclibcgnueabi-g++ -march=armv4t -mtune=arm920t -mthumb-interwork -mno-thumb"

export palmtopdir="/usr/lib/opie"

export PKG_CONFIG_SYSROOT_DIR="/home/dhuggins/Projects/TeRK/terkos/oe/tmp/staging/armv4t-oe-linux-uclibcgnueabi"

export PKG_CONFIG_PATH="/home/dhuggins/Projects/TeRK/terkos/oe/tmp/staging/armv4t-oe-linux-uclibcgnueabi/usr/lib/pkgconfig:/home/dhuggins/Projects/TeRK/terkos/oe/tmp/staging/armv4t-oe-linux-uclibcgnueabi/usr/share/pkgconfig"

unset MACHINE

export PATCH_GET="0"

export CXXFLAGS="-isystem/home/dhuggins/Projects/TeRK/terkos/oe/tmp/staging/armv4t-oe-linux-uclibcgnueabi/usr/include -fexpensive-optimizations -fomit-frame-pointer -frename-registers -Os -fpermissive -fvisibility-inlines-hidden"

export MANIFEST="/home/dhuggins/Projects/TeRK/terkos/oe/openembedded/recipes/images/./manifest"

export BUILD_STRIP="strip"

export PACKAGE_INSTALL="task-boot kernel-module-sd-mod kernel-module-scsi-mod kernel-module-usb-storage kernel-module-snd-usb-audio kernel-module-snd-mixer-oss kernel-module-snd-pcm-oss kernel-module-uvcvideo kernel-module-gspca-zc3xx kernel-module-v4l1-compat kernel-module-v4l2-common kernel-module-videodev kernel-module-zd1211rw kernel-module-rt73usb kernel-module-ecb kernel-module-arc4 kernel-module-aes rt73-firmware zd1211-firmware fis libstdc++ openssh openssh-sftp-server gdbserver busybox-httpd usbutils perl wireless-tools wpa-supplicant alsa-utils-alsactl alsa-utils-amixer alsa-utils-aplay initscripts udev sysvinit sysvinit-pidof tinylogin"

export CFLAGS="-isystem/home/dhuggins/Projects/TeRK/terkos/oe/tmp/staging/armv4t-oe-linux-uclibcgnueabi/usr/include -fexpensive-optimizations -fomit-frame-pointer -frename-registers -Os"

export BUILD_RANLIB="ranlib"

export sysconfdir="/etc"

export BUILD_CPPFLAGS="-isystem/home/dhuggins/Projects/TeRK/terkos/oe/tmp/staging/i686-linux/usr/include"

do_devshell() {
	devshell_do_devshell

}

base_do_checkuriall() {
	:

}

populate_staging_preamble() {
	if [ "$PSTAGING_ACTIVE" = "1" ]; then
		stage-manager -p /home/dhuggins/Projects/TeRK/terkos/oe/tmp/staging -c /home/dhuggins/Projects/TeRK/terkos/oe/tmp/deploy/pstage/stamp-cache-staging -u || true
		stage-manager -p /home/dhuggins/Projects/TeRK/terkos/oe/tmp/cross/armv4t -c /home/dhuggins/Projects/TeRK/terkos/oe/tmp/deploy/pstage/stamp-cache-cross -u || true
	fi

}

die() {
	oefatal "$*"

}

base_do_install() {
	:

}

do_fetchall() {
	base_do_fetchall

}

set_image_autologin() {
        sed -i 's%^AUTOLOGIN=\"false"%AUTOLOGIN="true"%g' /home/dhuggins/Projects/TeRK/terkos/oe/tmp/rootfs/etc/sysconfig/gpelogin

}

do_stage() {
	base_do_stage

}

zap_root_password() {
	sed 's%^root:[^:]*:%root:*:%' < /home/dhuggins/Projects/TeRK/terkos/oe/tmp/rootfs/etc/passwd >/home/dhuggins/Projects/TeRK/terkos/oe/tmp/rootfs/etc/passwd.new
	mv /home/dhuggins/Projects/TeRK/terkos/oe/tmp/rootfs/etc/passwd.new /home/dhuggins/Projects/TeRK/terkos/oe/tmp/rootfs/etc/passwd

}

do_package_stage_all() {
	:

}

base_do_compile() {
	if [ -e Makefile -o -e makefile ]; then
		oe_runmake || die "make failed"
	else
		oenote "nothing to compile"
	fi

}

do_deploy_to() {
	# A standalone task to deploy built image to the location specified
	# by DEPLOY_TO variable (likely passed via environment).
	# Assumes   jffs2 tar.gz  is a single value!
	cp "/home/dhuggins/Projects/TeRK/terkos/oe/tmp/deploy/images/qwerk/TerkOS-vexpro-image-3.3.1-20090610-qwerk.rootfs.  jffs2 tar.gz " ${DEPLOY_TO}

}

base_do_fetchall() {
	:

}

remove_init_link() {
	if [ -h /home/dhuggins/Projects/TeRK/terkos/oe/tmp/rootfs/sbin/init ]; then
		LINKFILE=/home/dhuggins/Projects/TeRK/terkos/oe/tmp/rootfs`readlink /home/dhuggins/Projects/TeRK/terkos/oe/tmp/rootfs/sbin/init`
		rm /home/dhuggins/Projects/TeRK/terkos/oe/tmp/rootfs/sbin/init
		cp $LINKFILE /home/dhuggins/Projects/TeRK/terkos/oe/tmp/rootfs/sbin/init
	fi

}

make_zimage_symlink_relative() {
	if [ -L /home/dhuggins/Projects/TeRK/terkos/oe/tmp/rootfs/boot/zImage ]; then
		(cd /home/dhuggins/Projects/TeRK/terkos/oe/tmp/rootfs/boot/ && for i in `ls zImage-* | sort`; do ln -sf $i zImage; done)
	fi

}

base_do_package() {
	:

}

oewarn() {
	echo "WARNING:" "$*"

}

rootfs_ipk_do_rootfs() {
	set -x

	package_update_index_ipk
	package_generate_ipkg_conf

	mkdir -p /home/dhuggins/Projects/TeRK/terkos/oe/tmp/work/qwerk-oe-linux-uclibcgnueabi/vexpro-image-1.0-r0/temp
	mkdir -p /home/dhuggins/Projects/TeRK/terkos/oe/tmp/rootfs/usr/lib/opkg/

	STATUS=/home/dhuggins/Projects/TeRK/terkos/oe/tmp/rootfs/usr/lib/opkg/status
	# prime the status file with bits that we don't want
	for i in ; do
		echo "Package: $i" >> $STATUS
		echo "Architecture: arm" >> $STATUS
		echo "Status: deinstall ok not-installed" >> $STATUS
		echo >> $STATUS
	done

	opkg-cl -f /home/dhuggins/Projects/TeRK/terkos/oe/tmp/staging/i686-linux/etc/opkg.conf -o /home/dhuggins/Projects/TeRK/terkos/oe/tmp/rootfs  update

	# Uclibc builds don't provide this stuff...
	if [ xlinux-uclibcgnueabi = "xlinux" ] || [ xlinux-uclibcgnueabi = "xlinux-gnueabi" ] ; then
		if [ ! -z "" ]; then
			opkg-cl -f /home/dhuggins/Projects/TeRK/terkos/oe/tmp/staging/i686-linux/etc/opkg.conf -o /home/dhuggins/Projects/TeRK/terkos/oe/tmp/rootfs  install glibc-localedata-i18n
			for i in ; do
				opkg-cl -f /home/dhuggins/Projects/TeRK/terkos/oe/tmp/staging/i686-linux/etc/opkg.conf -o /home/dhuggins/Projects/TeRK/terkos/oe/tmp/rootfs  install $i
			done
		fi
	fi
	if [ ! -z "task-boot kernel-module-sd-mod kernel-module-scsi-mod kernel-module-usb-storage kernel-module-snd-usb-audio kernel-module-snd-mixer-oss kernel-module-snd-pcm-oss kernel-module-uvcvideo kernel-module-gspca-zc3xx kernel-module-v4l1-compat kernel-module-v4l2-common kernel-module-videodev kernel-module-zd1211rw kernel-module-rt73usb kernel-module-ecb kernel-module-arc4 kernel-module-aes rt73-firmware zd1211-firmware fis libstdc++ openssh openssh-sftp-server gdbserver busybox-httpd usbutils perl wireless-tools wpa-supplicant alsa-utils-alsactl alsa-utils-amixer alsa-utils-aplay initscripts udev sysvinit sysvinit-pidof tinylogin" ]; then
		opkg-cl -f /home/dhuggins/Projects/TeRK/terkos/oe/tmp/staging/i686-linux/etc/opkg.conf -o /home/dhuggins/Projects/TeRK/terkos/oe/tmp/rootfs  install task-boot kernel-module-sd-mod kernel-module-scsi-mod kernel-module-usb-storage kernel-module-snd-usb-audio kernel-module-snd-mixer-oss kernel-module-snd-pcm-oss kernel-module-uvcvideo kernel-module-gspca-zc3xx kernel-module-v4l1-compat kernel-module-v4l2-common kernel-module-videodev kernel-module-zd1211rw kernel-module-rt73usb kernel-module-ecb kernel-module-arc4 kernel-module-aes rt73-firmware zd1211-firmware fis libstdc++ openssh openssh-sftp-server gdbserver busybox-httpd usbutils perl wireless-tools wpa-supplicant alsa-utils-alsactl alsa-utils-amixer alsa-utils-aplay initscripts udev sysvinit sysvinit-pidof tinylogin
	fi

	export D=/home/dhuggins/Projects/TeRK/terkos/oe/tmp/rootfs
	export OFFLINE_ROOT=/home/dhuggins/Projects/TeRK/terkos/oe/tmp/rootfs
	export IPKG_OFFLINE_ROOT=/home/dhuggins/Projects/TeRK/terkos/oe/tmp/rootfs
	export OPKG_OFFLINE_ROOT=${IPKG_OFFLINE_ROOT}

	mkdir -p /home/dhuggins/Projects/TeRK/terkos/oe/tmp/rootfs/etc/opkg/

	if [ "none" != "none" ]; then
		grep "^arch" /home/dhuggins/Projects/TeRK/terkos/oe/tmp/staging/i686-linux/etc/opkg.conf >/home/dhuggins/Projects/TeRK/terkos/oe/tmp/rootfs/etc/opkg/arch.conf
	fi

	for i in /home/dhuggins/Projects/TeRK/terkos/oe/tmp/rootfs/usr/lib/opkg/info/*.preinst; do
		if [ -f $i ] && ! sh $i; then
			opkg-cl -f /home/dhuggins/Projects/TeRK/terkos/oe/tmp/staging/i686-linux/etc/opkg.conf -o /home/dhuggins/Projects/TeRK/terkos/oe/tmp/rootfs  flag unpacked `basename $i .preinst`
		fi
	done
	for i in /home/dhuggins/Projects/TeRK/terkos/oe/tmp/rootfs/usr/lib/opkg/info/*.postinst; do
		if [ -f $i ] && ! sh $i configure; then
			opkg-cl -f /home/dhuggins/Projects/TeRK/terkos/oe/tmp/staging/i686-linux/etc/opkg.conf -o /home/dhuggins/Projects/TeRK/terkos/oe/tmp/rootfs  flag unpacked `basename $i .postinst`
		fi
	done

	install -d /home/dhuggins/Projects/TeRK/terkos/oe/tmp/rootfs//etc
	echo 200906100335 > /home/dhuggins/Projects/TeRK/terkos/oe/tmp/rootfs//etc/version

	if [ "none" != "none" ]; then
		if [ "none" == "add" ]; then
			rm -f /home/dhuggins/Projects/TeRK/terkos/oe/tmp/rootfs/usr/lib/opkg/status
			rm -f /home/dhuggins/Projects/TeRK/terkos/oe/tmp/rootfs/usr/lib/opkg/*/*
		else
			rm -f /home/dhuggins/Projects/TeRK/terkos/oe/tmp/rootfs/usr/lib/opkg/lists/*
		fi

		# Keep these lines until package manager selection is implemented
		ln -s opkg /home/dhuggins/Projects/TeRK/terkos/oe/tmp/rootfs/etc/ipkg
		ln -s opkg /home/dhuggins/Projects/TeRK/terkos/oe/tmp/rootfs/usr/lib/ipkg
	else
		rm -rf /home/dhuggins/Projects/TeRK/terkos/oe/tmp/rootfs/usr/lib/opkg
	fi

	

	log_check rootfs

}

oe_machinstall() {
	# Purpose: Install machine dependent files, if available
	#          If not available, check if there is a default
	#          If no default, just touch the destination
	# Example:
	#                $1  $2   $3         $4
	# oe_machinstall -m 0644 fstab /home/dhuggins/Projects/TeRK/terkos/oe/tmp/work/qwerk-oe-linux-uclibcgnueabi/vexpro-image-1.0-r0/image/etc/fstab
	#
	# TODO: Check argument number?
	#
	filename=`basename $3`
	dirname=`dirname $3`

	for o in `echo task-distribute_sources:local:qwerk:terkos:linux-uclibcgnueabi:arm:build-linux:fail-fast:pn-vexpro-image:thumb-interwork:armv4t | tr ':' ' '`; do
		if [ -e $dirname/$o/$filename ]; then
			oenote $dirname/$o/$filename present, installing to $4
			install $1 $2 $dirname/$o/$filename $4
			return
		fi
	done
#	oenote overrides specific file NOT present, trying default=$3...
	if [ -e $3 ]; then
		oenote $3 present, installing to $4
		install $1 $2 $3 $4
	else
		oenote $3 NOT present, touching empty $4
		touch $4
	fi

}

package_stagefile_shell() {
	if [ "$PSTAGING_ACTIVE" = "1" ]; then
		srcfile=$1
		destfile=`echo $srcfile | sed s#/home/dhuggins/Projects/TeRK/terkos/oe/tmp#/home/dhuggins/Projects/TeRK/terkos/oe/tmp/work/qwerk-oe-linux-uclibcgnueabi/vexpro-image-1.0-r0/staging-pkg#`
		destdir=`dirname $destfile`
		mkdir -p $destdir
		cp -dp $srcfile $destfile
	fi

}

rootfs_update_timestamp() {
	date "+%m%d%H%M%Y" >/home/dhuggins/Projects/TeRK/terkos/oe/tmp/rootfs/etc/timestamp

}

base_do_buildall() {
	:

}

do_configure() {
	base_do_configure

}

do_compile() {
	base_do_compile

}

insert_feed_uris() {

	echo "Building feeds for [terkos].."

	for line in ${FEED_URIS}
	do
		# strip leading and trailing spaces/tabs, then split into name and uri
		line_clean="`echo "$line"|sed 's/^[ \t]*//;s/[ \t]*$//'`"
		feed_name="`echo "$line_clean" | sed -n 's/\(.*\)##\(.*\)/\1/p'`"
		feed_uri="`echo "$line_clean" | sed -n 's/\(.*\)##\(.*\)/\2/p'`"

		echo "Added $feed_name feed with URL $feed_uri"

		# insert new feed-sources
		echo "src/gz $feed_name $feed_uri" >> /home/dhuggins/Projects/TeRK/terkos/oe/tmp/rootfs/etc/opkg/${feed_name}-feed.conf
	done

	# Allow to use package deploy directory contents as quick devel-testing
	# feed. This creates individual feed configs for each arch subdir of those
	# specified as compatible for the current machine.
	# NOTE: Development-helper feature, NOT a full-fledged feed.
	if [ -n "${FEED_DEPLOYDIR_BASE_URI}" ]; then
	    for arch in all any noarch arm  armv4 armv4t qwerk
	    do
		echo "src/gz local-$arch ${FEED_DEPLOYDIR_BASE_URI}/$arch" >> /home/dhuggins/Projects/TeRK/terkos/oe/tmp/rootfs/etc/opkg/local-$arch-feed.conf
	    done
	fi

}

staging_packager() {

	mkdir -p /home/dhuggins/Projects/TeRK/terkos/oe/tmp/work/qwerk-oe-linux-uclibcgnueabi/vexpro-image-1.0-r0/staging-pkg/CONTROL
	mkdir -p /home/dhuggins/Projects/TeRK/terkos/oe/tmp/deploy/pstage/terkosuclibc

	echo "Package: staging-vexpro-image-qwerk-oe-linux-uclibcgnueabi"         >  /home/dhuggins/Projects/TeRK/terkos/oe/tmp/work/qwerk-oe-linux-uclibcgnueabi/vexpro-image-1.0-r0/staging-pkg/CONTROL/control
	echo "Version: 1.0-r0"    >> /home/dhuggins/Projects/TeRK/terkos/oe/tmp/work/qwerk-oe-linux-uclibcgnueabi/vexpro-image-1.0-r0/staging-pkg/CONTROL/control
	echo "Description: Version 1.0-r0 of package vexpro-image"      >> /home/dhuggins/Projects/TeRK/terkos/oe/tmp/work/qwerk-oe-linux-uclibcgnueabi/vexpro-image-1.0-r0/staging-pkg/CONTROL/control
	echo "Section: base"              >> /home/dhuggins/Projects/TeRK/terkos/oe/tmp/work/qwerk-oe-linux-uclibcgnueabi/vexpro-image-1.0-r0/staging-pkg/CONTROL/control
	echo "Priority: Optional"               >> /home/dhuggins/Projects/TeRK/terkos/oe/tmp/work/qwerk-oe-linux-uclibcgnueabi/vexpro-image-1.0-r0/staging-pkg/CONTROL/control
	echo "Maintainer: OpenEmbedded Team <openembedded-devel@lists.openembedded.org>"        >> /home/dhuggins/Projects/TeRK/terkos/oe/tmp/work/qwerk-oe-linux-uclibcgnueabi/vexpro-image-1.0-r0/staging-pkg/CONTROL/control
	echo "Architecture: i686-linux"  >> /home/dhuggins/Projects/TeRK/terkos/oe/tmp/work/qwerk-oe-linux-uclibcgnueabi/vexpro-image-1.0-r0/staging-pkg/CONTROL/control

	# Protect against empty SRC_URI
	if [ "file:///home/dhuggins/Projects/TeRK/terkos/oe/openembedded/recipes/images/vexpro-image.bb" != "" ] ; then
		echo "Source: file:///home/dhuggins/Projects/TeRK/terkos/oe/openembedded/recipes/images/vexpro-image.bb"               >> /home/dhuggins/Projects/TeRK/terkos/oe/tmp/work/qwerk-oe-linux-uclibcgnueabi/vexpro-image-1.0-r0/staging-pkg/CONTROL/control
	else
		echo "Source: OpenEmbedded"               >> /home/dhuggins/Projects/TeRK/terkos/oe/tmp/work/qwerk-oe-linux-uclibcgnueabi/vexpro-image-1.0-r0/staging-pkg/CONTROL/control
	fi

	stage-manager-ipkg-build -o 0 -g 0 /home/dhuggins/Projects/TeRK/terkos/oe/tmp/work/qwerk-oe-linux-uclibcgnueabi/vexpro-image-1.0-r0/staging-pkg /home/dhuggins/Projects/TeRK/terkos/oe/tmp/deploy/pstage/terkosuclibc

}

SRC_DISTRIBUTECOMMAND() {
	s="/home/dhuggins/Projects/TeRK/terkos/oe/openembedded/recipes/images/vexpro-image.bb"
	if [ ! -L "$s" ] && (echo "$s"|grep "^${OEROOT}/sources"); then
		:
	else
		exit 0;
	fi
	mkdir -p /home/dhuggins/Projects/TeRK/terkos/oe/tmp/deploy/sources/MIT
	case "symlink" in
		copy)
			test -e $s.md5 && cp -f $s.md5 /home/dhuggins/Projects/TeRK/terkos/oe/tmp/deploy/sources/MIT/
			cp -f $s /home/dhuggins/Projects/TeRK/terkos/oe/tmp/deploy/sources/MIT/
			;;
		symlink)
			test -e $s.md5 && ln -sf $s.md5 /home/dhuggins/Projects/TeRK/terkos/oe/tmp/deploy/sources/MIT/
			ln -sf $s /home/dhuggins/Projects/TeRK/terkos/oe/tmp/deploy/sources/MIT/
			;;
		move+symlink)
			mv $s /home/dhuggins/Projects/TeRK/terkos/oe/tmp/deploy/sources/MIT/
			ln -sf /home/dhuggins/Projects/TeRK/terkos/oe/tmp/deploy/sources/MIT/`basename $s` $s
			;;
	esac

}

devshell_do_devshell() {
	export TERMWINDOWTITLE="Bitbake Developer Shell"
	gnome-terminal --disable-factory -t "$TERMWINDOWTITLE"
	if [ $? -ne 0 ]; then
	    echo "Fatal: 'gnome-terminal --disable-factory -t "$TERMWINDOWTITLE"' not found. Check TERMCMD variable."
	    exit 1
	fi

}

oe_soinstall() {
	# Purpose: Install shared library file and
	#          create the necessary links
	# Example:
	#
	# oe_
	#
	#oenote installing shared library $1 to $2
	#
	libname=`basename $1`
	install -m 755 $1 $2/$libname
	sonamelink=`arm-oe-linux-uclibcgnueabi-readelf -d $1 |grep 'Library soname:' |sed -e 's/.*\[\(.*\)\].*/\1/'`
	solink=`echo $libname | sed -e 's/\.so\..*/.so/'`
	ln -sf $libname $2/$sonamelink
	ln -sf $libname $2/$solink

}

oe_libinstall() {
	# Purpose: Install a library, in all its forms
	# Example
	#
	# oe_libinstall libltdl /home/dhuggins/Projects/TeRK/terkos/oe/tmp/staging/armv4t-oe-linux-uclibcgnueabi/usr/lib/
	# oe_libinstall -C src/libblah libblah /home/dhuggins/Projects/TeRK/terkos/oe/tmp/work/qwerk-oe-linux-uclibcgnueabi/vexpro-image-1.0-r0/image//usr/lib/
	dir=""
	libtool=""
	silent=""
	require_static=""
	require_shared=""
	staging_install=""
	while [ "$#" -gt 0 ]; do
		case "$1" in
		-C)
			shift
			dir="$1"
			;;
		-s)
			silent=1
			;;
		-a)
			require_static=1
			;;
		-so)
			require_shared=1
			;;
		-*)
			oefatal "oe_libinstall: unknown option: $1"
			;;
		*)
			break;
			;;
		esac
		shift
	done

	libname="$1"
	shift
	destpath="$1"
	if [ -z "$destpath" ]; then
		oefatal "oe_libinstall: no destination path specified"
	fi
	if echo "$destpath/" | egrep '^/home/dhuggins/Projects/TeRK/terkos/oe/tmp/staging/armv4t-oe-linux-uclibcgnueabi/usr/lib/' >/dev/null
	then
		staging_install=1
	fi

	__runcmd () {
		if [ -z "$silent" ]; then
			echo >&2 "oe_libinstall: $*"
		fi
		$*
	}

	if [ -z "$dir" ]; then
		dir=`pwd`
	fi

	dotlai=$libname.lai

	# Sanity check that the libname.lai is unique
	number_of_files=`(cd $dir; find . -name "$dotlai") | wc -l`
	if [ $number_of_files -gt 1 ]; then
		oefatal "oe_libinstall: $dotlai is not unique in $dir"
	fi


	dir=$dir`(cd $dir;find . -name "$dotlai") | sed "s/^\.//;s/\/$dotlai\$//;q"`
	olddir=`pwd`
	__runcmd cd $dir

	lafile=$libname.la

	# If such file doesn't exist, try to cut version suffix
	if [ ! -f "$lafile" ]; then
		libname1=`echo "$libname" | sed 's/-[0-9.]*$//'`
		lafile1=$libname.la
		if [ -f "$lafile1" ]; then
			libname=$libname1
			lafile=$lafile1
		fi
	fi

	if [ -f "$lafile" ]; then
		# libtool archive
		eval `cat $lafile|grep "^library_names="`
		libtool=1
	else
		library_names="$libname.so* $libname.dll.a"
	fi

	__runcmd install -d $destpath/
	dota=$libname.a
	if [ -f "$dota" -o -n "$require_static" ]; then
		__runcmd install -m 0644 $dota $destpath/
	fi
	if [ -f "$dotlai" -a -n "$libtool" ]; then
		if test -n "$staging_install"
		then
			# stop libtool using the final directory name for libraries
			# in staging:
			__runcmd rm -f $destpath/$libname.la
			__runcmd sed -e 's/^installed=yes$/installed=no/' \
				     -e '/^dependency_libs=/s,/home/dhuggins/Projects/TeRK/terkos/oe/tmp/work/qwerk-oe-linux-uclibcgnueabi/vexpro-image-1.0-r0[[:alnum:]/\._+-]*/\([[:alnum:]\._+-]*\),/home/dhuggins/Projects/TeRK/terkos/oe/tmp/staging/armv4t-oe-linux-uclibcgnueabi/usr/lib/\1,g' \
				     -e "/^dependency_libs=/s,\([[:space:]']\)/usr/lib,\1/home/dhuggins/Projects/TeRK/terkos/oe/tmp/staging/armv4t-oe-linux-uclibcgnueabi/usr/lib,g" \
				     $dotlai >$destpath/$libname.la
		else
			__runcmd install -m 0644 $dotlai $destpath/$libname.la
		fi
	fi

	for name in $library_names; do
		files=`eval echo $name`
		for f in $files; do
			if [ ! -e "$f" ]; then
				if [ -n "$libtool" ]; then
					oefatal "oe_libinstall: $dir/$f not found."
				fi
			elif [ -L "$f" ]; then
				__runcmd cp -P "$f" $destpath/
			elif [ ! -L "$f" ]; then
				libfile="$f"
				__runcmd install -m 0755 $libfile $destpath/
			fi
		done
	done

	if [ -z "$libfile" ]; then
		if  [ -n "$require_shared" ]; then
			oefatal "oe_libinstall: unable to locate shared library"
		fi
	elif [ -z "$libtool" ]; then
		# special case hack for non-libtool .so.#.#.# links
		baselibfile=`basename "$libfile"`
		if (echo $baselibfile | grep -qE '^lib.*\.so\.[0-9.]*$'); then
			sonamelink=`arm-oe-linux-uclibcgnueabi-readelf -d $libfile |grep 'Library soname:' |sed -e 's/.*\[\(.*\)\].*/\1/'`
			solink=`echo $baselibfile | sed -e 's/\.so\..*/.so/'`
			if [ -n "$sonamelink" -a x"$baselibfile" != x"$sonamelink" ]; then
				__runcmd ln -sf $baselibfile $destpath/$sonamelink
			fi
			__runcmd ln -sf $baselibfile $destpath/$solink
		fi
	fi

	__runcmd cd "$olddir"

}

base_do_configure() {
	:

}

base_do_distsrcall() {
	:

}

remove_packaging_data_files() {
	rm -rf /home/dhuggins/Projects/TeRK/terkos/oe/tmp/rootfs/usr/lib/opkg/

}

do_rootfs() {
	set -x
	rm -rf /home/dhuggins/Projects/TeRK/terkos/oe/tmp/rootfs
	mkdir -p /home/dhuggins/Projects/TeRK/terkos/oe/tmp/rootfs
	mkdir -p /home/dhuggins/Projects/TeRK/terkos/oe/tmp/deploy/images/qwerk

	if [ "0" != "1" ]; then
		for devtable in  /home/dhuggins/Projects/TeRK/terkos/oe/openembedded/files/device_table-minimal.txt; do
			makedevs -r /home/dhuggins/Projects/TeRK/terkos/oe/tmp/rootfs -D $devtable
		done
	fi

	rootfs_ipk_do_rootfs

	insert_feed_uris

	create_etc_timestamp

	ROOTFS_SIZE=`du -ks /home/dhuggins/Projects/TeRK/terkos/oe/tmp/rootfs|awk '{size = 10240 + $1; print (size > 65536 ? size : 65536) }'`
	
	#Code for image type jffs2
	mkfs.jffs2 -x lzo --root=/home/dhuggins/Projects/TeRK/terkos/oe/tmp/rootfs --faketime --output=/home/dhuggins/Projects/TeRK/terkos/oe/tmp/deploy/images/qwerk/TerkOS-vexpro-image-3.3.1-20090610-qwerk.rootfs.jffs2  --eraseblock=0x20000 --pad 
	cd /home/dhuggins/Projects/TeRK/terkos/oe/tmp/deploy/images/qwerk/
	rm -f /home/dhuggins/Projects/TeRK/terkos/oe/tmp/deploy/images/qwerk/vexpro-image-qwerk.jffs2
	ln -s TerkOS-vexpro-image-3.3.1-20090610-qwerk.rootfs.jffs2 /home/dhuggins/Projects/TeRK/terkos/oe/tmp/deploy/images/qwerk/vexpro-image-qwerk.jffs2

	#Code for image type tar.gz
	cd /home/dhuggins/Projects/TeRK/terkos/oe/tmp/rootfs && tar -zcvf /home/dhuggins/Projects/TeRK/terkos/oe/tmp/deploy/images/qwerk/TerkOS-vexpro-image-3.3.1-20090610-qwerk.rootfs.tar.gz .
	cd /home/dhuggins/Projects/TeRK/terkos/oe/tmp/deploy/images/qwerk/
	rm -f /home/dhuggins/Projects/TeRK/terkos/oe/tmp/deploy/images/qwerk/vexpro-image-qwerk.tar.gz
	ln -s TerkOS-vexpro-image-3.3.1-20090610-qwerk.rootfs.tar.gz /home/dhuggins/Projects/TeRK/terkos/oe/tmp/deploy/images/qwerk/vexpro-image-qwerk.tar.gz



	

	

}

oenote() {
	echo "NOTE:" "$*"

}

package_update_index_ipk() {
	set -x

	ipkgarchs="all any noarch arm  armv4 armv4t qwerk"

	if [ ! -z "${DEPLOY_KEEP_PACKAGES}" ]; then
		return
	fi

	touch /home/dhuggins/Projects/TeRK/terkos/oe/tmp/deploy/ipk/Packages
	ipkg-make-index -r /home/dhuggins/Projects/TeRK/terkos/oe/tmp/deploy/ipk/Packages -p /home/dhuggins/Projects/TeRK/terkos/oe/tmp/deploy/ipk/Packages -l /home/dhuggins/Projects/TeRK/terkos/oe/tmp/deploy/ipk/Packages.filelist -m /home/dhuggins/Projects/TeRK/terkos/oe/tmp/deploy/ipk

	for arch in $ipkgarchs; do
		if [ -e /home/dhuggins/Projects/TeRK/terkos/oe/tmp/deploy/ipk/$arch/ ] ; then
			touch /home/dhuggins/Projects/TeRK/terkos/oe/tmp/deploy/ipk/$arch/Packages
			ipkg-make-index -r /home/dhuggins/Projects/TeRK/terkos/oe/tmp/deploy/ipk/$arch/Packages -p /home/dhuggins/Projects/TeRK/terkos/oe/tmp/deploy/ipk/$arch/Packages -l /home/dhuggins/Projects/TeRK/terkos/oe/tmp/deploy/ipk/$arch/Packages.filelist -m /home/dhuggins/Projects/TeRK/terkos/oe/tmp/deploy/ipk/$arch/
		fi
		if [ -e /home/dhuggins/Projects/TeRK/terkos/oe/tmp/deploy/ipk/i686-$arch-sdk/ ] ; then
			touch /home/dhuggins/Projects/TeRK/terkos/oe/tmp/deploy/ipk/i686-$arch-sdk/Packages
			ipkg-make-index -r /home/dhuggins/Projects/TeRK/terkos/oe/tmp/deploy/ipk/i686-$arch-sdk/Packages -p /home/dhuggins/Projects/TeRK/terkos/oe/tmp/deploy/ipk/i686-$arch-sdk/Packages -l /home/dhuggins/Projects/TeRK/terkos/oe/tmp/deploy/ipk/i686-$arch-sdk/Packages.filelist -m /home/dhuggins/Projects/TeRK/terkos/oe/tmp/deploy/ipk/i686-$arch-sdk/
		fi
		if [ -e /home/dhuggins/Projects/TeRK/terkos/oe/tmp/deploy/ipk/i686-mingw32-sdk-$arch/ ] ; then
			touch /home/dhuggins/Projects/TeRK/terkos/oe/tmp/deploy/ipk/i686-mingw32-sdk-$arch/Packages
			ipkg-make-index -r /home/dhuggins/Projects/TeRK/terkos/oe/tmp/deploy/ipk/i686-mingw32-sdk-$arch/Packages -p /home/dhuggins/Projects/TeRK/terkos/oe/tmp/deploy/ipk/i686-mingw32-sdk-$arch/Packages -l /home/dhuggins/Projects/TeRK/terkos/oe/tmp/deploy/ipk/i686-mingw32-sdk-$arch/Packages.filelist -m /home/dhuggins/Projects/TeRK/terkos/oe/tmp/deploy/ipk/i686-mingw32-sdk-$arch/
		fi
	done

}

do_package_write() {
	:

}

package_generate_ipkg_conf() {
	mkdir -p /home/dhuggins/Projects/TeRK/terkos/oe/tmp/staging/i686-linux/etc/
	echo "src oe file:/home/dhuggins/Projects/TeRK/terkos/oe/tmp/deploy/ipk" > /home/dhuggins/Projects/TeRK/terkos/oe/tmp/staging/i686-linux/etc/opkg.conf
	echo "src oe file:/home/dhuggins/Projects/TeRK/terkos/oe/tmp/deploy/ipk" > /home/dhuggins/Projects/TeRK/terkos/oe/tmp/staging/i686-linux/etc/opkg-sdk.conf
	echo "src oe file:/home/dhuggins/Projects/TeRK/terkos/oe/tmp/deploy/ipk" > /home/dhuggins/Projects/TeRK/terkos/oe/tmp/staging/i686-linux/etc/opkg-canadian-sdk.conf
	ipkgarchs="all any noarch arm  armv4 armv4t qwerk"
	priority=1
	for arch in $ipkgarchs; do
		echo "arch $arch $priority" >> /home/dhuggins/Projects/TeRK/terkos/oe/tmp/staging/i686-linux/etc/opkg.conf
		echo "arch i686-$arch-sdk $priority" >> /home/dhuggins/Projects/TeRK/terkos/oe/tmp/staging/i686-linux/etc/opkg-sdk.conf
		echo "arch i686-mingw32-sdk-$arch $priority" >> /home/dhuggins/Projects/TeRK/terkos/oe/tmp/staging/i686-linux/etc/opkg-canadian-sdk.conf
		priority=$(expr $priority + 5)
		if [ -e /home/dhuggins/Projects/TeRK/terkos/oe/tmp/deploy/ipk/$arch/Packages ] ; then
		        echo "src oe-$arch file:/home/dhuggins/Projects/TeRK/terkos/oe/tmp/deploy/ipk/$arch" >> /home/dhuggins/Projects/TeRK/terkos/oe/tmp/staging/i686-linux/etc/opkg.conf
		fi
		if [ -e /home/dhuggins/Projects/TeRK/terkos/oe/tmp/deploy/ipk/i686-$arch-sdk/Packages ] ; then
		        echo "src oe-i686-$arch-sdk file:/home/dhuggins/Projects/TeRK/terkos/oe/tmp/deploy/ipk/i686-$arch-sdk" >> /home/dhuggins/Projects/TeRK/terkos/oe/tmp/staging/i686-linux/etc/opkg-sdk.conf
		fi
		if [ -e /home/dhuggins/Projects/TeRK/terkos/oe/tmp/deploy/ipk/i686-mingw32-sdk-$arch/Packages ] ; then
		        echo "src oe-i686-mingw32-sdk-$arch file:/home/dhuggins/Projects/TeRK/terkos/oe/tmp/deploy/ipk/i686-mingw32-sdk-$arch" >> /home/dhuggins/Projects/TeRK/terkos/oe/tmp/staging/i686-linux/etc/opkg-canadian-sdk.conf
		fi
	done

}

log_check() {
	set +x
	for target in $*
	do
		lf_path="/home/dhuggins/Projects/TeRK/terkos/oe/tmp/work/qwerk-oe-linux-uclibcgnueabi/vexpro-image-1.0-r0/temp/log.do_$target.25382"

		echo "log_check: Using $lf_path as logfile"

		if test -e "$lf_path"
		then
			rootfs_ipk_log_check $target $lf_path
		else
			echo "Cannot find logfile [$lf_path]"
		fi
		echo "Logfile is clean"
	done

	set -x

}

do_install() {
	base_do_install

}

base_do_stage() {
	:

}

MIRRORS() {
ftp://ftp.debian.org/debian/pool/main	http://snapshot.debian.net/archive/pool
ftp://ftp.debian.org/debian/pool	ftp://ftp.de.debian.org/debian/pool
ftp://ftp.debian.org/debian/pool	ftp://ftp.au.debian.org/debian/pool
ftp://ftp.debian.org/debian/pool	ftp://ftp.cl.debian.org/debian/pool
ftp://ftp.debian.org/debian/pool	ftp://ftp.hr.debian.org/debian/pool
ftp://ftp.debian.org/debian/pool	ftp://ftp.fi.debian.org/debian/pool
ftp://ftp.debian.org/debian/pool	ftp://ftp.hk.debian.org/debian/pool
ftp://ftp.debian.org/debian/pool	ftp://ftp.hu.debian.org/debian/pool
ftp://ftp.debian.org/debian/pool	ftp://ftp.ie.debian.org/debian/pool
ftp://ftp.debian.org/debian/pool	ftp://ftp.it.debian.org/debian/pool
ftp://ftp.debian.org/debian/pool	ftp://ftp.jp.debian.org/debian/pool
ftp://ftp.debian.org/debian/pool	ftp://ftp.no.debian.org/debian/pool
ftp://ftp.debian.org/debian/pool	ftp://ftp.pl.debian.org/debian/pool
ftp://ftp.debian.org/debian/pool	ftp://ftp.ro.debian.org/debian/pool
ftp://ftp.debian.org/debian/pool	ftp://ftp.si.debian.org/debian/pool
ftp://ftp.debian.org/debian/pool	ftp://ftp.es.debian.org/debian/pool
ftp://ftp.debian.org/debian/pool	ftp://ftp.se.debian.org/debian/pool
ftp://ftp.debian.org/debian/pool	ftp://ftp.tr.debian.org/debian/pool
ftp://ftp.gnu.org/gnu	ftp://mirrors.kernel.org/gnu
ftp://ftp.gnu.org/gnu	ftp://ftp.matrix.com.br/pub/gnu
ftp://ftp.gnu.org/gnu	ftp://ftp.cs.ubc.ca/mirror2/gnu
ftp://ftp.gnu.org/gnu	ftp://sunsite.ust.hk/pub/gnu
ftp://ftp.gnu.org/gnu	ftp://ftp.ayamura.org/pub/gnu
http://kernel.org	http://www.kernel.org/pub
http://kernel.org	ftp://ftp.us.kernel.org/pub
http://kernel.org	ftp://ftp.uk.kernel.org/pub
http://kernel.org	ftp://ftp.hk.kernel.org/pub
http://kernel.org	ftp://ftp.au.kernel.org/pub
http://kernel.org	ftp://ftp.jp.kernel.org/pub
ftp://ftp.gnupg.org/gcrypt/     ftp://ftp.franken.de/pub/crypt/mirror/ftp.gnupg.org/gcrypt/
ftp://ftp.gnupg.org/gcrypt/     ftp://ftp.surfnet.nl/pub/security/gnupg/
ftp://ftp.gnupg.org/gcrypt/     http://gulus.USherbrooke.ca/pub/appl/GnuPG/
ftp://dante.ctan.org/tex-archive ftp://ftp.fu-berlin.de/tex/CTAN
ftp://dante.ctan.org/tex-archive http://sunsite.sut.ac.jp/pub/archives/ctan/
ftp://dante.ctan.org/tex-archive http://ctan.unsw.edu.au/
ftp://ftp.gnutls.org/pub/gnutls ftp://ftp.gnutls.org/pub/gnutls/
ftp://ftp.gnutls.org/pub/gnutls ftp://ftp.gnupg.org/gcrypt/gnutls/
ftp://ftp.gnutls.org/pub/gnutls http://www.mirrors.wiretapped.net/security/network-security/gnutls/
ftp://ftp.gnutls.org/pub/gnutls ftp://ftp.mirrors.wiretapped.net/pub/security/network-security/gnutls/
ftp://ftp.gnutls.org/pub/gnutls http://josefsson.org/gnutls/releases/
http://ftp.info-zip.org/pub/infozip/src/ http://mirror.switch.ch/ftp/mirror/infozip/src/
http://ftp.info-zip.org/pub/infozip/src/ ftp://sunsite.icm.edu.pl/pub/unix/archiving/info-zip/src/
ftp://lsof.itap.purdue.edu/pub/tools/unix/lsof/  ftp://ftp.cerias.purdue.edu/pub/tools/unix/sysutils/lsof/
ftp://lsof.itap.purdue.edu/pub/tools/unix/lsof/  ftp://ftp.tau.ac.il/pub/unix/admin/
ftp://lsof.itap.purdue.edu/pub/tools/unix/lsof/  ftp://ftp.cert.dfn.de/pub/tools/admin/lsof/
ftp://lsof.itap.purdue.edu/pub/tools/unix/lsof/  ftp://ftp.fu-berlin.de/pub/unix/tools/lsof/
ftp://lsof.itap.purdue.edu/pub/tools/unix/lsof/  ftp://ftp.kaizo.org/pub/lsof/
ftp://lsof.itap.purdue.edu/pub/tools/unix/lsof/  ftp://ftp.tu-darmstadt.de/pub/sysadmin/lsof/
ftp://lsof.itap.purdue.edu/pub/tools/unix/lsof/  ftp://ftp.tux.org/pub/sites/vic.cc.purdue.edu/tools/unix/lsof/
ftp://lsof.itap.purdue.edu/pub/tools/unix/lsof/  ftp://gd.tuwien.ac.at/utils/admin-tools/lsof/
ftp://lsof.itap.purdue.edu/pub/tools/unix/lsof/  ftp://sunsite.ualberta.ca/pub/Mirror/lsof/
ftp://lsof.itap.purdue.edu/pub/tools/unix/lsof/  ftp://the.wiretapped.net/pub/security/host-security/lsof/
http://www.apache.org/dist  http://archive.apache.org/dist


}

create_etc_timestamp() {
	date +%2m%2d%2H%2M%Y >/home/dhuggins/Projects/TeRK/terkos/oe/tmp/rootfs/etc/timestamp

}

staging_package_installer() {
	#stage-manager-ipkg -f /home/dhuggins/Projects/TeRK/terkos/oe/tmp/deploy/pstage/opkg.conf -force-depends -o /home/dhuggins/Projects/TeRK/terkos/oe/tmp install /home/dhuggins/Projects/TeRK/terkos/oe/tmp/deploy/pstage/terkosuclibc/staging-vexpro-image-qwerk-oe-linux-uclibcgnueabi_1.0-r0_i686-linux.ipk

	STATUSFILE=/home/dhuggins/Projects/TeRK/terkos/oe/tmp/usr/lib/opkg/status
	echo "Package: staging-vexpro-image-qwerk-oe-linux-uclibcgnueabi"        >> $STATUSFILE
	echo "Version: 1.0-r0"   >> $STATUSFILE
	echo "Status: install user installed"  >> $STATUSFILE
	echo "Architecture: i686-linux" >> $STATUSFILE
	echo "" >> $STATUSFILE

	CTRLFILE=/home/dhuggins/Projects/TeRK/terkos/oe/tmp/usr/lib/opkg/info/staging-vexpro-image-qwerk-oe-linux-uclibcgnueabi.control
	echo "Package: staging-vexpro-image-qwerk-oe-linux-uclibcgnueabi"        > $CTRLFILE
	echo "Version: 1.0-r0"   >> $CTRLFILE
	echo "Architecture: i686-linux" >> $CTRLFILE

	cd /home/dhuggins/Projects/TeRK/terkos/oe/tmp/work/qwerk-oe-linux-uclibcgnueabi/vexpro-image-1.0-r0/staging-pkg
	find -type f | grep -v ./CONTROL | sed -e 's/^\.//' > /home/dhuggins/Projects/TeRK/terkos/oe/tmp/usr/lib/opkg/info/staging-vexpro-image-qwerk-oe-linux-uclibcgnueabi.list

}

ldconfig_postinst_fragment() {
if [ x"$D" = "x" ]; then
	if [ -e /etc/ld.so.conf ] ; then
		[ -x /sbin/ldconfig ] && /sbin/ldconfig
	fi
fi

}

populate_staging_postamble() {
	if [ "$PSTAGING_ACTIVE" = "1" ]; then
		# list the packages currently installed in staging
		# stage-manager-ipkg -f /home/dhuggins/Projects/TeRK/terkos/oe/tmp/deploy/pstage/opkg.conf -o /home/dhuggins/Projects/TeRK/terkos/oe/tmp list_installed | awk '{print $1}' > /home/dhuggins/Projects/TeRK/terkos/oe/tmp/deploy/pstage/installed-list

		# exitcode == 5 is ok, it means the files change
		set +e
		stage-manager -p /home/dhuggins/Projects/TeRK/terkos/oe/tmp/staging -c /home/dhuggins/Projects/TeRK/terkos/oe/tmp/deploy/pstage/stamp-cache-staging -u -d /home/dhuggins/Projects/TeRK/terkos/oe/tmp/work/qwerk-oe-linux-uclibcgnueabi/vexpro-image-1.0-r0/staging-pkg/staging
		exitcode=$?
		if [ "$exitcode" != "5" -a "$exitcode" != "0" ]; then
			exit $exitcode
		fi
		stage-manager -p /home/dhuggins/Projects/TeRK/terkos/oe/tmp/cross/armv4t -c /home/dhuggins/Projects/TeRK/terkos/oe/tmp/deploy/pstage/stamp-cache-cross -u -d /home/dhuggins/Projects/TeRK/terkos/oe/tmp/work/qwerk-oe-linux-uclibcgnueabi/vexpro-image-1.0-r0/staging-pkg/cross
		if [ "$exitcode" != "5" -a "$exitcode" != "0" ]; then
			exit $exitcode
		fi
		set -e
	fi

}

oedebug() {
	test $# -ge 2 || {
		echo "Usage: oedebug level \"message\""
		exit 1
	}

	test ${OEDEBUG:-0} -ge $1 && {
		shift
		echo "DEBUG:" $*
	}

}

oe_runmake() {
	if [ x"$MAKE" = x ]; then MAKE=make; fi
	oenote make -e MAKEFLAGS= "$@"
	make -e MAKEFLAGS= "$@" || die "oe_runmake failed"

}

staging_helper() {
	# Assemble appropriate opkg.conf
	conffile=/home/dhuggins/Projects/TeRK/terkos/oe/tmp/deploy/pstage/opkg.conf
	mkdir -p /home/dhuggins/Projects/TeRK/terkos/oe/tmp/deploy/pstage/pstaging_lists
	if [ ! -e $conffile ]; then
		ipkgarchs="i686-linux"
		priority=1
		for arch in $ipkgarchs; do
			echo "arch $arch $priority" >> $conffile
			priority=$(expr $priority + 5)
		done
		echo "dest root /" >> $conffile
	fi
	if [ ! -e /home/dhuggins/Projects/TeRK/terkos/oe/tmp/usr/lib/opkg/info/ ]; then
		mkdir -p /home/dhuggins/Projects/TeRK/terkos/oe/tmp/usr/lib/opkg/info/
	fi
 	if [ ! -e /home/dhuggins/Projects/TeRK/terkos/oe/tmp/usr/lib/ipkg/ ]; then
		cd /home/dhuggins/Projects/TeRK/terkos/oe/tmp/usr/lib/
		ln -sf opkg/ ipkg
	fi

}

rootfs_ipk_log_check() {
	target="$1"
        lf_path="$2"

	lf_txt="`cat $lf_path`"
	for keyword_die in "Cannot find package" "exit 1" ERR Fail
	do
		if (echo "$lf_txt" | grep -v log_check | grep -w "$keyword_die") >/dev/null 2>&1
		then
			echo "log_check: There were error messages in the logfile"
			printf "log_check: Matched keyword: [$keyword_die]\n"
			echo "$lf_txt" | grep -v log_check | grep -i "$keyword_die" -C1
			echo ""
			do_exit=1
		fi
	done
	test "$do_exit" = 1 && exit 1
	true

}

oefatal() {
	echo "FATAL:" "$*"
	exit 1

}

cd /home/dhuggins/Projects/TeRK/terkos/oe
SRC_DISTRIBUTECOMMAND
